@using HRExpert.Organization.DTO
@using HRExpert.Organization.BL
@model DocumentDto<SicklistDto>
@{
    this.Layout = "_Layout";
    ViewBag.Title = "Редактирование заявки";
    object htmlAttributes = new { @class = "form-control" };
    object htmlAttributesCheckBox = new {  };
    if (!Model.IsEditable)
    {
        htmlAttributes = new { @class = "form-control", disabled="disabled" };
        htmlAttributesCheckBox = new { disabled = "disabled" };
    }
    var Options = new { htmlAttributes = htmlAttributes };
}
<ul class="breadcrumb">
    <li><a href="#">Табель</a></li>
    <li>@Html.ActionLink("Больничные", "Index", "Sicklist")</li>
    <li>@ViewBag.Title</li>
</ul>
<form method="post" enctype="multipart/form-data">
    <div id="FormContainer">
        @Html.HiddenFor(x => x.Data.Id)
        <div class="form-group">
            <label>Сотрудник:</label>@Model.Person.Name
        </div>
        <div class="form-group">
            <label>Должность:</label>@Model.Person.StaffEstablishedPost.Position.Name
        </div>
        <div class="form-group">
            <label>Подразделение:</label>@Model.Person.StaffEstablishedPost.Department.Name
        </div>
        <div class="form-group">
            <label for="personName">Дата начала:</label>
            @Html.EditorFor(model => model.Data.BeginDate, Options)
        </div>
        <div class="form-group ">
            <label for="personName">Дата окончания:</label>
            @Html.EditorFor(model => model.Data.EndDate, Options)
        </div>
        <div class="form-group ">
            <label for="personName">Назначить с:</label>
            @Html.EditorFor(model => model.Data.PaymentBeginDate, Options)
        </div>
        <div class="form-group ">
            <label for="personName">Количество дней:</label>

        </div>
        <div class="form-group">
            <label class="control-label">Номер больничного листа:</label>
            @Html.EditorFor(x => x.Data.SicklistNumber, Options)
        </div>
        <div class="form-group">
            <label class="control-label">Тип больничного листа:</label>
            @await Component.InvokeAsync("ReferencySelect", new { referenceName = ReferenceNames.SicklistTypes, fieldname = "Data.SicklistType.Id", isEditable = Model.IsEditable, currentValue = Model.Data.SicklistType?.Id })
        </div>
        <div class="form-group">
            <label class="control-label">В случае ухода за ребенком:</label>
            @await Component.InvokeAsync("ReferencySelect", new { referenceName = ReferenceNames.SicklistBabyMindingTypes, fieldname = "Data.SicklistBabyMindingType.Id", isEditable = Model.IsEditable, currentValue = Model.Data.SicklistBabyMindingType?.Id })
        </div>
        <div class="form-group">
            <label class="control-label">Процент оплаты заработка:</label>
            @await Component.InvokeAsync("ReferencySelect", new { referenceName = ReferenceNames.SicklistPaymentPercent, fieldname = "Data.SicklistPaymentPercent.Id", isEditable = Model.IsEditable, currentValue = Model.Data.SicklistPaymentPercent?.Id })
        </div>
        <div class="form-group">
            <label class="control-label">Ограничение заработка (пособия):</label>
            @await Component.InvokeAsync("ReferencySelect", new { referenceName = ReferenceNames.SicklistPaymentRestrictTypes, fieldname = "Data.SicklistPaymentRestrictType.Id", isEditable = Model.IsEditable, currentValue = Model.Data.SicklistPaymentRestrictType?.Id })
        </div>
        <div class="form-group">
            <label>Снизить пособие за нарушение режима с:</label>
            @Html.EditorFor(x => x.Data.PaymentDecreaseDate, Options)
        </div>
        <div class="form-group">
            <label>Учитывать заработок предыдущих страхователей</label>
            @Html.CheckBoxFor(x => x.Data.isPreviousPaymentCounted, htmlAttributesCheckBox)
        </div>
        <div class="form-group">
            <label>Доплачивать до среднего заработка</label>
            @Html.CheckBoxFor(x => x.Data.isAddToFullPayment, htmlAttributesCheckBox)
        </div>
        <div class="form-group">
            <label>Больничный имеет продолжение</label>

        </div>
        <div class="form-group">
            <label class="control-label">Заполнение табеля:</label>
            @await Component.InvokeAsync("ReferencySelect", new { referenceName = ReferenceNames.TimesheetStatus, fieldname = "Data.TimesheetStatus.Id", isEditable = Model.IsEditable, currentValue = Model.Data.TimesheetStatus?.Id })
        </div>
        <div class="form-group">
            <label class="control-label">Скан документа:</label>
            @if (Model.Files != null)
            {<span>
                @foreach (var file in Model.Files)
                { @Html.ActionLink(file.FileName, "GetFile", "Sicklist", new { SicklistId = Model.Data.Id, fileType = 1 }) }
            </span>}
            @if (Model.IsEditable)
            {
                <input type="file" name="Data.SicklistDocument" />
            }
        </div>
    </div>
    <div id="ApproveContainer">
        @for (int i = 0; i < Model.Approvements.Count; i++)
            {
            <div class="form-group">
                @Html.HiddenFor(x => x.Approvements[i].ApprovePosition)
                <label>@Model.Approvements[i].Label</label>
                @Html.CheckBoxFor(model => model.Approvements[i].isAccept, Model.IsEditable && !Model.Approvements[i].isAccept ? null : htmlAttributesCheckBox)
                <span>@Model.Approvements[i].Person?.Name</span>
                <span>(@Model.Approvements[i].RealPerson?.Name)</span>
            </div>
        }
    </div>
    @if (Model.IsEditable)
    {
        <div id="ControlsContainer">
            <input type="submit" class="btn btn-success" value="Сохранить" />
            <input type="submit" class="btn btn-danger" value="Отменить" />
        </div>
    }
</form>

<script>
    $(document).ready(function () {
        $('#Data_BeginDate').datepicker({ dateFormat: 'dd.mm.yy' });
        $('#Data_EndDate').datepicker({ dateFormat: 'dd.mm.yy' });
        $('#Data_PaymentDecreaseDate').datepicker({ dateFormat: 'dd.mm.yy' });
        $('#Data_PaymentBeginDate').datepicker({ dateFormat: 'dd.mm.yy' });
    });
</script>

